generator client {
  provider = "prisma-client-js"
  output   = "client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  email      String    @unique
  name       String?
  avatarUrl  String?   @map("avatar_url")
  role       UserRole  @default(USER)
  isVerified Boolean   @default(false) @map("is_verified")
  otp        String?
  otpExpires DateTime?
  isActive   Boolean   @default(true) @map("is_active")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @default(now()) @map("updated_at")

  chats Chat[]

  @@map("users")
}

model Chat {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @map("user_id") @db.ObjectId
  title     String   @default("New Chat")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  user     User      @relation(fields: [userId], references: [id])
  messages Message[]

  @@map("chats")
}

model Message {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  chatId      String   @map("chat_id") @db.ObjectId
  content     String
  reasoning   String?
  role        String
  parts       Json
  attachments Json?
  annotations Json?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @map("updated_at")

  chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)

  @@map("messages")
}

enum UserRole {
  ADMIN
  USER
}
